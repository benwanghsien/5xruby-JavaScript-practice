{"mappings":"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","sources":["src/functions/todo.js"],"sourcesContent":["import axios from \"axios\";\n\nconst API_BASE = \"https://todoo.5xcamp.us\";\nconst addBtn = document.querySelector(\"#addBtn\");\nconst taskInput = document.querySelector(\"#taskInput\");\nconst todoList = document.querySelector(\".todo-list\");\n\n// addbtn click handler\naddBtn.addEventListener(\"click\", () => {\n  renderNewList();\n});\n\n//input enter handler\ntaskInput.addEventListener(\"keypress\", (e) => {\n  if (e.key === \"Enter\") {\n    renderNewList();\n  }\n});\n\n// ul event handler\ntodoList.addEventListener(\"click\", (e) => {\n  removeTodo(e);\n\n  finishTodo(e);\n\n  updateTodoBtn(e);\n});\n\n// window loaded handler\nwindow.addEventListener(\"load\", () => {\n  getTodo(`${API_BASE}/todos`);\n});\n\n// render new list item\nfunction renderNewList() {\n  if (taskInput.value.trim() !== \"\") {\n    const todoData = {\n      todo: {\n        content: taskInput.value,\n      },\n    };\n\n    postTodo(`${API_BASE}/todos`, todoData);\n\n    const newList = `\n        <li class=\"todo-item\">\n          <span class=\"item\">${taskInput.value}</span>\n          <div class=\"btn-group\">\n            <button class=\"updateBtn\">+</button>\n            <button class=\"finishBtn\">O</button>\n            <button class=\"closeBtn\">X</button>\n        </div>\n        </li>\n      `;\n\n    todoList.insertAdjacentHTML(\"beforeend\", newList);\n\n    taskInput.value = \"\";\n    taskInput.focus();\n  }\n}\n\n// remove todo list item\nfunction removeTodo(event) {\n  if (event.target.classList.contains(\"closeBtn\")) {\n    const id = event.target.parentElement.parentElement.dataset.todo;\n    deleteTodo(id);\n\n    event.target.parentElement.parentElement.remove();\n  }\n}\n\n// finished todo list item\nfunction finishTodo(event) {\n  const id = event.target.parentElement.parentElement.dataset.todo;\n  if (event.target.classList.contains(\"finishBtn\")) {\n    toggleTodo(id);\n    event.target.parentElement.parentElement.classList.toggle(\"finished\");\n  }\n}\n\n// update todo list item\nfunction updateTodoBtn(event) {\n  const id = event.target.parentElement.parentElement.dataset.todo;\n  if (event.target.classList.contains(\"updateBtn\")) {\n    const input = document.createElement(\"input\");\n    const span = event.target.parentElement.previousElementSibling;\n    const originalText = span.innerText;\n    input.value = span.innerText;\n    input.classList.add(\"input-update\");\n    input.addEventListener(\"blur\", (e) => {\n      span.innerText = e.target.value;\n      input.replaceWith(span);\n      if (originalText !== span.innerText) {\n        const data = {\n          todo: {\n            content: span.innerText,\n          },\n        };\n\n        updateTodo(id, data);\n      }\n    });\n\n    input.addEventListener(\"keyup\", (e) => {\n      if (e.key === \"Enter\") {\n        e.target.blur();\n      }\n    });\n    span.replaceWith(input);\n    input.focus();\n  }\n}\n\n// connect with server\nfunction postTodo(url, data) {\n  const token = localStorage.getItem(\"token\");\n\n  axios\n    .post(url, data, {\n      headers: {\n        Authorization: token,\n      },\n    })\n    .then((res) => {\n      // TODO del\n      console.log(\"新增成功\");\n    })\n    .catch((e) => console.log(e));\n}\n\nfunction getTodo(url) {\n  const token = localStorage.getItem(\"token\");\n  axios\n    .get(url, {\n      headers: {\n        Authorization: token,\n      },\n    })\n    .then(({ data }) => {\n      data.todos.forEach((d) => {\n        const checked = d.completed_at !== null ? \"finished\" : \"\";\n        const newList = `\n        <li class=\"todo-item ${checked}\" data-todo=\"${d.id}\" >\n          <span class=\"item\">${d.content}</span>\n          <div class=\"btn-group\">\n            <button class=\"updateBtn\">+</button>\n            <button class=\"finishBtn\">O</button>\n            <button class=\"closeBtn\">X</button>\n        </div>\n        </li>\n      `;\n\n        todoList.insertAdjacentHTML(\"afterbegin\", newList);\n      });\n    })\n    .catch((e) => {\n      console.log(e);\n    });\n}\n\nfunction deleteTodo(id) {\n  const token = localStorage.getItem(\"token\");\n  axios.delete(`https://todoo.5xcamp.us/todos/${id}`, {\n    headers: { Authorization: token },\n  });\n}\n\nfunction updateTodo(id, data) {\n  const token = localStorage.getItem(\"token\");\n  axios.put(`${API_BASE}/todos/${id}`, data, {\n    headers: { Authorization: token },\n  });\n}\n\nfunction toggleTodo(id) {\n  const token = localStorage.getItem(\"token\");\n\n  const data = axios\n    .patch(\n      `${API_BASE}/todos/${id}/toggle`,\n      {},\n      {\n        headers: {\n          Authorization: token,\n        },\n      }\n    )\n    .then(({ data }) => data);\n\n  return data;\n}\n"],"names":["$fmRoT","parcelRequire","$35fae3e49773fa0a$var$addBtn","document","querySelector","$35fae3e49773fa0a$var$taskInput","$35fae3e49773fa0a$var$todoList","$35fae3e49773fa0a$var$renderNewList","value","trim","url","data","token","localStorage","getItem","$parcel$interopDefault","post","headers","Authorization","then","res","console","log","catch","e","$35fae3e49773fa0a$var$postTodo","todo","content","newList","insertAdjacentHTML","focus","addEventListener","key","event","target","classList","contains","id","delete","$35fae3e49773fa0a$var$deleteTodo","parentElement","dataset","remove","$35fae3e49773fa0a$var$removeTodo","patch","$35fae3e49773fa0a$var$toggleTodo","toggle","$35fae3e49773fa0a$var$finishTodo","input","createElement","span","previousElementSibling","originalText","innerText","add","replaceWith","put","$35fae3e49773fa0a$var$updateTodo","blur","$35fae3e49773fa0a$var$updateTodoBtn","window","get","todos","forEach","d","completed_at","$35fae3e49773fa0a$var$getTodo"],"version":3,"file":"todo_page.8f84e828.js.map"}